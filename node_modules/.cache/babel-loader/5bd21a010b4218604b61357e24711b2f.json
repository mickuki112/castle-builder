{"ast":null,"code":"var _jsxFileName = \"/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/castle-builder/src/components/Castle/Castle.js\";\nimport React from 'react';\nimport BrickOfType from './Brick/Brick';\nimport styles from './Castle.module.css';\n\nvar castle = function castle(props) {\n  /*let transformedComponents = Object.keys(props.components)\n      .map(comKey=>{\n          return [...Array(props.components[comKey])].map((_,i)=>{\n              return<BrickOfType type={comKey} key={comKey+i}/>;\n          });\n      })\n      .reduce((arr,el)=>{\n          return arr.concat(el)\n      },[]);*/\n  var styleVerse = {\n    display: 'flex',\n    justifyContent: 'center',\n    width: '100%' //margin:'auto',\n\n  };\n  var transformedComponents = props.components.map(function (column, i) {\n    return React.createElement(\"div\", {\n      style: styleVerse,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, column.map(function (verse, j) {\n      return React.createElement(BrickOfType, {\n        added: function added() {\n          return props.added(verse, [i, j]);\n        },\n        type: verse,\n        key: verse + j,\n        styleComponents: props.styleComponents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    }));\n  }); //if(transformedComponents.length===0){\n  //    transformedComponents=<BrickOfType type='stoneBrick' />;\n  //}\n\n  return React.createElement(\"div\", {\n    className: styles.styleBuilder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, transformedComponents);\n};\n\nexport default castle;","map":{"version":3,"sources":["/media/mickuki/f37c4816-231b-487c-8f5f-b372b930c30c/web_master/castle-builder/src/components/Castle/Castle.js"],"names":["React","BrickOfType","styles","castle","props","styleVerse","display","justifyContent","width","transformedComponents","components","map","column","i","verse","j","added","styleComponents","styleBuilder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,IAAMC,MAAM,GAAE,SAARA,MAAQ,CAACC,KAAD,EAAS;AACnB;;;;;;;;;AASI,MAAMC,UAAU,GAAC;AACbC,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,cAAc,EAAE,QAFH;AAGbC,IAAAA,KAAK,EAAC,MAHO,CAIb;;AAJa,GAAjB;AAMJ,MAAIC,qBAAqB,GAAGL,KAAK,CAACM,UAAN,CAAiBC,GAAjB,CAAqB,UAACC,MAAD,EAAQC,CAAR,EAAY;AACrD,WAAO;AAAK,MAAA,KAAK,EAAER,UAAZ;AAAwB,MAAA,GAAG,EAAEQ,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCD,MAAM,CAACD,GAAP,CAAW,UAACG,KAAD,EAAOC,CAAP,EAAW;AAC1D,aAAO,oBAAC,WAAD;AACH,QAAA,KAAK,EAAE;AAAA,iBAAIX,KAAK,CAACY,KAAN,CAAYF,KAAZ,EAAkB,CAACD,CAAD,EAAGE,CAAH,CAAlB,CAAJ;AAAA,SADJ;AAEH,QAAA,IAAI,EAAED,KAFH;AAGH,QAAA,GAAG,EAAEA,KAAK,GAACC,CAHR;AAIH,QAAA,eAAe,EAAEX,KAAK,CAACa,eAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAKH,KANuC,CAAjC,CAAP;AAOH,GARuB,CAA5B,CAhBmB,CAyBnB;AACA;AACA;;AACA,SACI;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACgB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,qBADL,CADJ;AAKH,CAjCD;;AAmCA,eAAeN,MAAf","sourcesContent":["import React from 'react';\nimport BrickOfType from './Brick/Brick';\nimport styles from './Castle.module.css';\n\nconst castle =(props)=>{\n    /*let transformedComponents = Object.keys(props.components)\n        .map(comKey=>{\n            return [...Array(props.components[comKey])].map((_,i)=>{\n                return<BrickOfType type={comKey} key={comKey+i}/>;\n            });\n        })\n        .reduce((arr,el)=>{\n            return arr.concat(el)\n        },[]);*/\n        const styleVerse={\n            display: 'flex',\n            justifyContent: 'center',\n            width:'100%',\n            //margin:'auto',\n        }\n    let transformedComponents = props.components.map((column,i)=>{\n            return <div style={styleVerse} key={i}>{column.map((verse,j)=>{\n                return <BrickOfType\n                    added={()=>props.added(verse,[i,j])}\n                    type={verse}\n                    key={verse+j}\n                    styleComponents={props.styleComponents}/>\n            })}</div>\n        })\n    //if(transformedComponents.length===0){\n    //    transformedComponents=<BrickOfType type='stoneBrick' />;\n    //}\n    return(\n        <div className={styles.styleBuilder}>\n            {transformedComponents}\n        </div>\n    );\n};\n\nexport default castle;\n"]},"metadata":{},"sourceType":"module"}